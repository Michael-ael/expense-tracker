{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","Components/AddTransaction.jsx","Components/Balance.jsx","Components/Header.jsx","Components/Income.jsx","Components/Transaction.jsx","Components/TransactionList.jsx","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","InitialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","onChange","target","placeholder","Balance","total","map","reduce","acc","item","toFixed","Header","Income","amounts","income","expense","Transaction","sign","abs","onClick","TransactionList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,WAACA,EAAOC,GACnB,OAAOA,EAAOC,MACV,IAAK,qBACD,OAAO,2BACAF,GADP,IAEIG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAGzF,IAAK,kBACD,OAAO,2BACAP,GADP,IAEIG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAEhD,QACI,OAAOH,I,OCVbQ,EAAe,CACjBL,aAAc,IASLM,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBC,qBAAWC,EAAYN,GADL,mBACrCR,EADqC,KAC9Be,EAD8B,KAkB5C,OAAQ,cAACN,EAAcO,SAAf,CAAwBC,MAAO,CACnCd,aAAcH,EAAMG,aACpBe,kBAhBsB,SAACZ,GACvBS,EAAS,CACLb,KAAM,qBACNK,QAASD,KAcba,eAVmB,SAACd,GACpBU,EAAS,CACLb,KAAM,kBACNK,QAASF,MAIT,SAKHO,KCiBMQ,EAtDQ,WAAO,IAAD,EACDC,mBAAS,IADR,mBAClBC,EADkB,KACZC,EADY,OAEGF,mBAAS,IAFZ,mBAElBG,EAFkB,KAEVC,EAFU,KAOjBN,EAAmBO,qBAAWjB,GAA9BU,eAgBR,OACI,gCACI,uDACA,uBAAMQ,SAjBG,SAACC,GACdA,EAAEC,iBACFN,EAAQ,IACRE,EAAU,IAEV,IAAMK,EAAiB,CACnBxB,GAAIyB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBX,OACAE,QAASA,GAGbL,EAAeW,IAMX,UACI,sBAAKI,UAAU,eAAf,UACI,uBAAOC,QAAQ,OAAf,oBACA,uBAAOjC,KAAK,OACZe,MAAOK,EACPc,SAAU,SAACR,GAAD,OAAOL,EAAQK,EAAES,OAAOpB,QAClCqB,YAAY,qBAGhB,sBAAKJ,UAAU,eAAf,UACI,wBAAOC,QAAQ,SAAf,oBACW,uBADX,KAEM,mBAAGD,UAAU,WAAb,mCAFN,KAEyD,mBAAGA,UAAU,WAAb,kCAFzD,OAKA,uBAAOhC,KAAK,SACXe,MAAOO,EACPY,SAAU,SAACR,GAAD,OAAOH,EAAUG,EAAES,OAAOpB,QACpCqB,YAAY,uBAGjB,wBAAQJ,UAAU,MAAlB,sCChCDK,EAdC,WAAO,IAIbC,EAHmBd,qBAAWjB,GAA5BN,aAEqBsC,KAAI,SAAApC,GAAW,OAAIA,EAAYmB,UACtCkB,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAEtE,OACI,sBAAKX,UAAU,UAAf,UACG,gDACA,oCAAOM,EAAP,WCHIM,EARA,WACX,OACI,kDCgCOC,EAjCA,WAAO,IAGZC,EAFmBtB,qBAAWjB,GAA5BN,aAEqBsC,KAAI,SAAApC,GAAW,OAAIA,EAAYmB,UAEtDyB,EACUD,EACA5C,QAAO,SAAAwC,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAGlBK,IAGsD,EAF5CF,EACC5C,QAAO,SAAAwC,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IACpCC,QAAQ,GAE1B,OACI,sBAAKX,UAAU,oBAAf,UACI,gCACI,wCACA,oBAAGA,UAAU,aAAb,eAA6Be,QAGjC,gCACI,2CACA,oBAAGf,UAAU,cAAb,eAA8BgB,EAA9B,cCbDC,EAbK,SAAC,GAAqB,IAAnB9C,EAAkB,EAAlBA,YACXa,EAAsBQ,qBAAWjB,GAAjCS,kBAEFkC,EAAO/C,EAAYmB,OAAS,EAAI,IAAM,IAE5C,OACI,qBAAIU,UAAW7B,EAAYmB,OAAS,EAAI,QAAU,OAAlD,UACKnB,EAAYiB,KADjB,IACuB,qCAAQ8B,EAAR,IAAerB,KAAKsB,IAAIhD,EAAYmB,QAApC,OACnB,wBAAQ8B,QAAS,kBAAMpC,EAAkBb,EAAYC,KAAK4B,UAAU,aAApE,mBCMGqB,EAdS,WAAO,IACnBpD,EAAiBuB,qBAAWjB,GAA5BN,aAGR,OACI,gCACI,2CACA,oBAAI+B,UAAU,OAAd,SACK/B,EAAasC,KAAI,SAAApC,GAAW,OAAK,cAAC,EAAD,CAAaA,YAAaA,aCY7DmD,MAhBf,WAEE,OAEE,cAAC,EAAD,UACI,sBAAKtB,UAAU,YAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCNOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3760afe0.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// initial state\r\nconst InitialState = {\r\n    transactions: [\r\n        // { id: 1, text: 'Flower', amount: -20},\r\n        // { id: 2, text: 'Salary', amount: 300},\r\n        // { id: 3, text: 'Book', amount: -10},\r\n        // { id: 4, text: 'Camera', amount: 150}\r\n    ]\r\n}\r\n\r\n//create context\r\nexport const GlobalContext = createContext(InitialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, InitialState);\r\n\r\n    // Actions\r\n    const deleteTransaction = (id) => {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    const addTransaction = (transaction) => {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(\"\");\r\n    // const [textInput, settextInput] = useState(\"\");\r\n    // const [amountInput, setamountInput] = useState(0);\r\n\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setText(\"\")\r\n        setAmount(\"\")\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3> Add new transaction </h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\"> Text </label>\r\n                    <input type=\"text\" \r\n                    value={text} \r\n                    onChange={(e) => setText(e.target.value)}\r\n                    placeholder=\"Enter text...\"/>\r\n                </div>\r\n\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">\r\n                        Amount <br />\r\n                        ( <p className=\"negative\">negative(-) = expense</p>, <p className=\"positive\">positive(+) = income</p>)\r\n                    </label>\r\n\r\n                    <input type=\"number\"\r\n                     value={amount}\r\n                     onChange={(e) => setAmount(e.target.value)}\r\n                     placeholder=\"Enter amount...\"/>                        \r\n                </div>\r\n\r\n                <button className=\"btn\"\r\n                > Add Transaction </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nconst Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"balance\">\r\n           <h4> Your Balance </h4>\r\n           <h1> ${total} </h1> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Income = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = \r\n                    amounts\r\n                   .filter(item => item > 0)\r\n                   .reduce((acc, item) => (acc += item), 0)\r\n                   .toFixed(2);\r\n\r\n\r\n    const expense = (\r\n                    amounts\r\n                    .filter(item => item < 0)\r\n                    .reduce((acc, item) => (acc += item), 0) * -1\r\n                    ).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\"> ${income}</p>\r\n            </div>\r\n\r\n            <div>\r\n                <h4> Expense </h4>\r\n                <p className=\"money minus\"> ${expense} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Income\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nconst Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} <span> {sign}${Math.abs(transaction.amount)} </span>\r\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport Transaction from './Transaction';\r\n\r\nconst TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3> History </h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (<Transaction transaction={transaction}/>) )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import AddTransaction from \"./Components/AddTransaction\";\nimport Balance from \"./Components/Balance\";\nimport Header from \"./Components/Header\";\nimport Income from \"./Components/Income\";\nimport TransactionList from \"./Components/TransactionList\";\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport './index.css'\n\nfunction App() {\n\n  return (\n    \n    <GlobalProvider>\n        <div className=\"container\">\n        <Header />\n        <Balance />\n        <Income />\n        <TransactionList />\n        <AddTransaction />\n        </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}